#!/usr/bin/env bash

git config --global user.email "tomster@emberjs.com"
git config --global user.name "Tomster"

# Repos
SRC_REPO="tildeio/htmlbars"
BUILDS_REPO="tildeio/htmlbars-builds"

# Name of source repo as it should appear in commit messages
SRC_NAME="htmlbars"

# User associated with the GH_TOKEN
USER="tildeio"

# Ensure that no directories within dist will be copied when script is run.
INCLUDED_FILES=`find find -maxdepth 1 -type f`

echo -e "SRC_REPO: ${SRC_REPO}\n"
echo -e "BUILDS_REPO: ${BUILDS_REPO}\n"
echo -e "INCLUDED_FILES: ${INCLUDED_FILES}\n"
echo -e "CURRENT_BRANCH: ${TRAVIS_BRANCH}\n"

# Set channel to publish to. If no suitable branch is found exit successfully.
case $TRAVIS_BRANCH in
  "master" )
    CHANNEL="canary" ;;
  * )
    echo "Not a bower release branch.  Exiting!"
    exit 0 ;;
esac
echo -e "CHANNEL: ${CHANNEL}\n"

# Send output to /dev/null to prevent GH_TOKEN leak on error
git clone --branch ${CHANNEL} https://${USER}:${GH_TOKEN}@github.com/${BUILDS_REPO}.git bower_build &> /dev/null
rm -rf bower_build/*
cp -r ${INCLUDED_FILES} bower_build/
cd bower_build
git remote rm origin

# Send output to /dev/null to prevent GH_TOKEN leak on error
git remote add origin https://${USER}:${GH_TOKEN}@github.com/${BUILDS_REPO}.git &> /dev/null
git add -A
git commit -m "${SRC_NAME}: https://github.com/${SRC_REPO}/commits/${TRAVIS_COMMIT}."

# Send output to /dev/null to prevent GH_TOKEN leak on error
git push -fq origin ${CHANNEL} &> /dev/null
echo -e "Done\n"